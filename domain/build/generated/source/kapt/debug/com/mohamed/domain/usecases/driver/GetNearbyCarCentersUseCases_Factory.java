// Generated by Dagger (https://dagger.dev).
package com.mohamed.domain.usecases.driver;

import com.mohamed.domain.repositories.WorkerRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class GetNearbyCarCentersUseCases_Factory implements Factory<GetNearbyCarCentersUseCases> {
  private final Provider<WorkerRepository> driverRepositoryProvider;

  public GetNearbyCarCentersUseCases_Factory(Provider<WorkerRepository> driverRepositoryProvider) {
    this.driverRepositoryProvider = driverRepositoryProvider;
  }

  @Override
  public GetNearbyCarCentersUseCases get() {
    return newInstance(driverRepositoryProvider.get());
  }

  public static GetNearbyCarCentersUseCases_Factory create(
      Provider<WorkerRepository> driverRepositoryProvider) {
    return new GetNearbyCarCentersUseCases_Factory(driverRepositoryProvider);
  }

  public static GetNearbyCarCentersUseCases newInstance(WorkerRepository driverRepository) {
    return new GetNearbyCarCentersUseCases(driverRepository);
  }
}
