// Generated by Dagger (https://dagger.dev).
package com.mohamed.domain.usecases;

import com.mohamed.domain.repositories.NewsRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class NewsUseCase_Factory implements Factory<NewsUseCase> {
  private final Provider<NewsRepository> repositoryProvider;

  public NewsUseCase_Factory(Provider<NewsRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public NewsUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static NewsUseCase_Factory create(Provider<NewsRepository> repositoryProvider) {
    return new NewsUseCase_Factory(repositoryProvider);
  }

  public static NewsUseCase newInstance(NewsRepository repository) {
    return new NewsUseCase(repository);
  }
}
