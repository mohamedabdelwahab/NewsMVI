// Generated by Dagger (https://dagger.dev).
package com.mohamed.data.repositeries;

import com.mohamed.data.source.local.NewsDatabase;
import com.mohamed.data.source.remote.NewsService;
import com.mohamed.domain.repositories.ISharedPrefrance;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class NewsRepositoryImp_Factory implements Factory<NewsRepositoryImp> {
  private final Provider<NewsService> newsApiProvider;

  private final Provider<NewsDatabase> newsArticleDbProvider;

  private final Provider<ISharedPrefrance> iSharedPrefranceProvider;

  public NewsRepositoryImp_Factory(Provider<NewsService> newsApiProvider,
      Provider<NewsDatabase> newsArticleDbProvider,
      Provider<ISharedPrefrance> iSharedPrefranceProvider) {
    this.newsApiProvider = newsApiProvider;
    this.newsArticleDbProvider = newsArticleDbProvider;
    this.iSharedPrefranceProvider = iSharedPrefranceProvider;
  }

  @Override
  public NewsRepositoryImp get() {
    return newInstance(newsApiProvider.get(), newsArticleDbProvider.get(), iSharedPrefranceProvider.get());
  }

  public static NewsRepositoryImp_Factory create(Provider<NewsService> newsApiProvider,
      Provider<NewsDatabase> newsArticleDbProvider,
      Provider<ISharedPrefrance> iSharedPrefranceProvider) {
    return new NewsRepositoryImp_Factory(newsApiProvider, newsArticleDbProvider, iSharedPrefranceProvider);
  }

  public static NewsRepositoryImp newInstance(NewsService newsApi, NewsDatabase newsArticleDb,
      ISharedPrefrance iSharedPrefrance) {
    return new NewsRepositoryImp(newsApi, newsArticleDb, iSharedPrefrance);
  }
}
